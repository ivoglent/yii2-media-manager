<?php
/**
 * @project  Investment Deals
 * @copyright Â© 2017 by ivoglent
 * @author ivoglent
 * @time  9/8/17.
 */


namespace ivoglent\media\manager\components;


use ivoglent\media\manager\models\Media;
use ivoglent\media\manager\models\MediaFile;
use yii\base\Object;
use yii\web\UploadedFile;

class UploadOptions extends Object
{
    /**
     * Upload directory, by default if this var empty we'll use
     * defined path from this module
     *
     * @var string
     */
    public $uploadDirectory             = '';

    /**
     * Keep current file name as uploaded file
     * if not, new filename will be generated randomize and uiniqueue
     *
     * @var bool
     */
    public $keepFileName                = true;

    /**
     * If uploading is a photo file, user may also want to create
     * a thumbnail file with defined size .
     * @see $thumbnailSize
     *
     * @var bool
     */
    public $generateThumbnail           = false;

    /**
     * Default size of image thumbnail
     * Allowed format : WIDTHxHEIGHT in pixcels
     *
     * @var string
     */
    public $thumbnailSize               = '120';

    /**
     * Resize origin file to new size
     * which defined
     * @see $resizeTo
     *
     * @var bool
     */
    public $resize                      = true;

    /**
     * New size of a photo
     * Allowed format : WIDTHxHEIGHT in pixcels
     *
     * @var string
     */
    public $resizeTo                    = '1024';

    /**
     * Origin filename
     *
     * @var string
     */
    public $filename                    = '';

    /**
     * @var int
     */
    public $type                        = MediaFile::MEDIA_TYPE_PHOTO;

    /**
     * @var UploadedFile
     */
    public $file;

    /**
     * UploadOptions constructor.
     * @param array $config
     */
    public function __construct(array $config = [])
    {
        $attrs = get_object_vars($this);
        foreach ($config as $key => $value) {
            if (!array_key_exists($key, $attrs)) {
                unset($config[$key]);
            }
        }
        parent::__construct($config);
    }

    /**
     * Setup default options
     * if user does not wanna define
     */
    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        if (!$this->keepFileName) {
            $this->filename = $this->generateNewFilename();
        }
        if (empty($this->uploadDirectory)) {
            $this->uploadDirectory = Media::getCurrentDirectory();
        }
    }

    /**
     * Auto generate new random file name
     *
     * @return string
     */
    private function generateNewFilename()
    {
        $time = time();
        $filename = $this->filename;
        $ext =  end(explode(".", $filename));
        do {
            $filename = substr(md5($filename. $time), 0, 8) . '.' . $ext;
        } while (file_exists($this->uploadDirectory . DIRECTORY_SEPARATOR . $filename));
        return $filename;
    }


    /**
     * @param string $default
     * @return string
     */
    public function getFilename($default = '')
    {
        $filename = $default;
        if (!empty($this->filename)) {
            $filename = $this->filename;
        } else {
            $filename = $this->file->name;
        }
        return Helper::validateFilename($filename, 45);
    }

}